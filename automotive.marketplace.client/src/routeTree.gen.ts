/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as RegisterImport } from './app/routes/register'
import { Route as ModelsImport } from './app/routes/models'
import { Route as LoginImport } from './app/routes/login'
import { Route as ListingsImport } from './app/routes/listings'
import { Route as CarsImport } from './app/routes/cars'
import { Route as AboutImport } from './app/routes/about'
import { Route as IndexImport } from './app/routes/index'
import { Route as ListingCreateImport } from './app/routes/listing/create'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const ModelsRoute = ModelsImport.update({
  id: '/models',
  path: '/models',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ListingsRoute = ListingsImport.update({
  id: '/listings',
  path: '/listings',
  getParentRoute: () => rootRoute,
} as any)

const CarsRoute = CarsImport.update({
  id: '/cars',
  path: '/cars',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ListingCreateRoute = ListingCreateImport.update({
  id: '/listing/create',
  path: '/listing/create',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/cars': {
      id: '/cars'
      path: '/cars'
      fullPath: '/cars'
      preLoaderRoute: typeof CarsImport
      parentRoute: typeof rootRoute
    }
    '/listings': {
      id: '/listings'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/models': {
      id: '/models'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof ModelsImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/listing/create': {
      id: '/listing/create'
      path: '/listing/create'
      fullPath: '/listing/create'
      preLoaderRoute: typeof ListingCreateImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cars': typeof CarsRoute
  '/listings': typeof ListingsRoute
  '/login': typeof LoginRoute
  '/models': typeof ModelsRoute
  '/register': typeof RegisterRoute
  '/listing/create': typeof ListingCreateRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cars': typeof CarsRoute
  '/listings': typeof ListingsRoute
  '/login': typeof LoginRoute
  '/models': typeof ModelsRoute
  '/register': typeof RegisterRoute
  '/listing/create': typeof ListingCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cars': typeof CarsRoute
  '/listings': typeof ListingsRoute
  '/login': typeof LoginRoute
  '/models': typeof ModelsRoute
  '/register': typeof RegisterRoute
  '/listing/create': typeof ListingCreateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cars'
    | '/listings'
    | '/login'
    | '/models'
    | '/register'
    | '/listing/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cars'
    | '/listings'
    | '/login'
    | '/models'
    | '/register'
    | '/listing/create'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cars'
    | '/listings'
    | '/login'
    | '/models'
    | '/register'
    | '/listing/create'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CarsRoute: typeof CarsRoute
  ListingsRoute: typeof ListingsRoute
  LoginRoute: typeof LoginRoute
  ModelsRoute: typeof ModelsRoute
  RegisterRoute: typeof RegisterRoute
  ListingCreateRoute: typeof ListingCreateRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CarsRoute: CarsRoute,
  ListingsRoute: ListingsRoute,
  LoginRoute: LoginRoute,
  ModelsRoute: ModelsRoute,
  RegisterRoute: RegisterRoute,
  ListingCreateRoute: ListingCreateRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/cars",
        "/listings",
        "/login",
        "/models",
        "/register",
        "/listing/create"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/cars": {
      "filePath": "cars.tsx"
    },
    "/listings": {
      "filePath": "listings.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/models": {
      "filePath": "models.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/listing/create": {
      "filePath": "listing/create.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
